// ++++++++++++++++++++++++++++++++TASK1++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Задача: З'єднати імена учасників
// У вас є два списки імен. Один список містить імена учасників, які прийдуть на вечірку з одного класу, а інший список містить імена учасників з іншого класу. Ваше завдання - створити єдиний список імен учасників, які прийдуть на вечірку, використовуючи методи "of", "from", "at" та "concat".

// Вхідні дані:
// Список імен учасників з першого класу: ["Олексій", "Ірина", "Максим"]
// Список імен учасників з другого класу: ["Анна", "Юрій", "Олена"]
// Вихідні дані:
// Єдиний список імен учасників: ["Олексій", "Ірина", "Максим", "Анна", "Юрій", "Олена"]
// Кроки для рішення:
// Створіть два масиви імен за допомогою методу of.
// Об'єднайте обидва масиви за допомогою методу concat.
// Перевірте, чи є в списку ім'я "Юрій" за допомогою методу at.
// Створіть новий список імен із єдиного списку за допомогою методу from.


// const class1 = Array.of("Олексій", "Ірина", "Максим")
// const class2 = Array.of("Анна", "Юрій", "Олена")

// const resault = class1.concat(class2)

// //const check = Boolean(resault.at(4))
// const check = resault.at(4) === "Юрій"

// const newlist = Array.from(resault)

// console.log(resault);
// console.log(check);
// console.log(newlist)

//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// ++++++++++++++++++++++++++++++++TASK 2++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// Задача: Управління замовленнями в ресторані
// У ресторані існує система управління замовленнями. Кожне замовлення має декілька страв. Вам потрібно розробити систему, яка використовує методи "of", "from", "at" та "concat" для управління замовленнями.

// Вхідні дані:
// Список замовлень: кожне замовлення є масивом страв.
// Нове замовлення: масив страв для нового замовлення.
// Завдання:
// Додайте нове замовлення до списку замовлень.
// Перевірте третю страву в п'ятому замовленні.
// Створіть новий список страв, взявши першу страву з кожного замовлення.
// З'єднайте два замовлення в одне.
// Приклад:
// Вхідні дані:
// Список замовлень:
// ["Борщ", "Салат", "Пельмени"]
// ["Піцца", "Лазанья", "Тірамісу"]
// ["Роли", "Місо-суп", "Темпура"]
// ["Стейк", "Фрі", "Брауні"]
// Нове замовлення:
// ["Гаспачо", "Тапас", "Паелья"]